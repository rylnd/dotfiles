[alias]
	st = status
	ci = commit
	co = checkout
	cp = cherry-pick
	put = push origin HEAD
	fixup = !sh -c 'git commit -m \"fixup! $(git log -1 --format='\\''%s'\\'' $@)\"' -
	squash = !sh -c 'git commit -m \"squash! $(git log -1 --format='\\''%s'\\'' $@)\"' -
	ri = rebase --interactive
	br = branch
	brs = for-each-ref --sort=-committerdate --format="%(committerdate:relative)%09%(refname:short)" refs/heads
	pruneremote = remote prune origin
	tree = log --graph --oneline --decorate --color --all
	tr = log --graph --oneline --decorate --color
	blog = log --graph --pretty=format:'%Cred%h%Creset %C(yellow)%an%d%Creset %s %Cgreen(%cr)%Creset' --date=relative
	unpushed = !"PROJ_BRANCH=$(git symbolic-ref HEAD | sed 's|refs/heads/||') && git log origin/$PROJ_BRANCH..HEAD"
	unpulled = !"PROJ_BRANCH=$(git symbolic-ref HEAD | sed 's|refs/heads/||') && git fetch && git log HEAD..origin/$PROJ_BRANCH"
	lol = log --oneline --graph --decorate
	sta = status -s -b
	df = diff -w
	me = merge
	fixm = commit --amen
	reauth = commit --amen --reset-author -CHEAD
	redo = commit --amen -CHEAD
	merge-clean = !sh -c '(git merge $@ > /tmp/git-output && cat /tmp/git-output) || (git merge --abort && echo \"Merge aborted.\" && exit 1) ' -
	delete-merged = !sh -c '(git fetch -p && git branch --merged | grep -v "\\*" | grep -v 'master' | xargs -n1 git branch -d)' -
[branch]
	autosetuprebase = always
[color]
	ui = auto
[core]
	excludesfile = ~/.cvsignore
	editor = vim
	whitespace = warn
[help]
	autocorrect = 10
[interactive]
	singlekey = false
[merge]
	summary = true
[push]
	default = tracking
[rebase]
	autosquash = true
[user]
	name = Ryland Herrick
	email = ryalnd@gmail.com
[advice]
	statusHints = false
